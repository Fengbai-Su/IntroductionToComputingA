/***************
描述
在数学上，有一种n*n的矩阵，名字叫做幻方。它的含义是，这个矩阵的所有的行的和、所有的列的和以及两条对角线上的和，都是同一个数字。而且在这个矩阵中，从１到n*n各出现了一次并且只出现了一次。比如，中国历史上《易经》所用的著名的“洛书”，其本质就是一个三阶幻方： 
8　1　6 
3　5　7 
4　9　2 
可以看出，4+9+2，3+5+7，8+1+6，4+3+8，9+5+1，2+7+6，4+5+6与2+5+8这几个和都是15。现在，我们可以通过如下的方法，来构造一个(2k+1)*(2k+1)的幻方。 
（1）第一个数字填在第一行的中间 
（2）在填完第i个数字之后，第i+1个数字填在第i个数字的右上方 
（3）如果第i个数字位于第一行，那么第i+1个数字就填在最后一行，位于i的右边 
（4）如果第i个数字位于最后一列，那么第i+1个数字就填在第一列，位于i的上方 
（5）如果i位于矩阵的右上角，或者i的右上角已有数字，那么i+１便填在i的下方 
关于输入
一个整数n，3<=n<=21，n是一个奇数
关于输出
依以上方法做出的n*n的幻方。
例子输入
5
例子输出
17 24 1 8 15
23 5  7 14 16
4 6 13 20 22
10 12 19 21 3
11 18 25 2 9
**************/
#include <iostream>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <iomanip>
#define MAX 2147483647
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[30][30]={0};
    int j=0,k=n/2;
    arr[j][k]=1;
    for(int i=2;i<=n*n;++i){
        if(j==0 && k!=n-1){
            j=n-1;
            k++;
            arr[j][k]=i;
        }else if(k==n-1 && j!=0){
            j--;
            k=0;
            arr[j][k]=i;
        }else if((j==0 && k==n-1) || arr[j-1][k+1]!=0){
            j++;
            arr[j][k]=i;
        }else{
            arr[--j][++k]=i;
        }
    }
    for(int i=0;i<n;++i){
        for(int j=0;j<n-1;++j){
            cout<<arr[i][j]<<' ';
        }
        cout<<arr[i][n-1]<<endl;
    }
    return 0;
}
