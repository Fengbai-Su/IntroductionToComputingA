/*************
来源	元培-From Whf
描述
任意给定一个k（其中，k 大于1小于10）进制的数（不超过30位，且第一位不为0），以此为基点，按增1的方式连续输出后面的m个k进制数，其间以逗号间隔,这里，m为正整数。输出的每个数第一位不能为0，每行输出5个数，最后一行可以少于5个。 

例如，给定12位的5进制数：321234232132，后面的6个数依次为： 

321234232133,321234232134,321234232140,321234232141,321234232142,321234232143 

如果输出6个数，则应该是： 

321234232133,321234232134,321234232140,321234232141,321234232142 
321234232143
关于输入
输入三个数k,m,和k进制数，三个数之间以逗号间隔，k进制数不超过30位，m为正整数。 
关于输出
输出后续的m个数，每行5个数（每行的最后一个数之后没有逗号），最后一行可以少于5个数。
例子输入
5,6,321234232132

例子输出
321234232133,321234232134,321234232140,321234232141,321234232142

321234232143
**************/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
char str[35];
int k,m,cnt=0;
int pluss(int n){
    if(n>0 && str[n]-'0'==k){
        str[n]='0';
        str[n-1]++;
        pluss(n-1);
    }else if(n==0 && str[n]-'0'==k){
        str[n]='0';
        cnt=1;
        return 1;
    }else if(str[n]-'0'<k){
        return 0;
    }
    if(cnt==1)return 1;
    else return 0;
}
int main(){
    char c;
    cin>>k>>c>>m>>c;
    cin>>str;
    int time=0;
    for(int i=0;i<m;++i){
        time++;
        int len=strlen(str);
        if(str[len-1]>='0' && str[len-1]-'0'<k){
            str[len-1]++;
            cnt=0;
            if(pluss(len-1)==1){
                for(int j=len-1;j>=0;--j){
                    str[j+1]=str[j];
                }
                str[0]='1';
                str[len+1]='\0';
            }
            if(time%5!=0 && i!=m-1){
                cout<<str<<',';
            }else{
                cout<<str<<endl;
            }
        }
    }
    return 0;
}
