/**********
来源	计算概论A 2011
描述
通配符是一类键盘字符，当我们不知道真正字符或者不想键入完整名字时，常常使用通配符代替一个或多个真正字符。通配符有问号(?)和星号(*)等，其中，“?”可以代替一个字符，而“*”可以代替零个或多个字符。 

你的任务是，给出一个带有通配符的字符串和一个不带通配符的字符串，判断他们是否能够匹配。 

例如，1?456 可以匹配 12456、13456、1a456，但是却不能够匹配23456、1aa456； 
2*77?8可以匹配 24457798、237708、27798。
关于输入
输入有两行，每行为一个不超过20个字符的字符串，第一行带通配符，第二行不带通配符
关于输出
如果两者可以匹配，就输出“matched”，否则输出“not matched”
例子输入
1*456?

11111114567
例子输出
matched
**********/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
int main(){
    char str1[25],str2[25];
    cin.getline(str1, 25);
    cin.getline(str2, 25);
    bool dp[25][25]={0};
    dp[0][0]=true;
    int len1=strlen(str1);
    int len2=strlen(str2);
    for(int i=0;i<len1;++i){
        if(str1[i]=='*')dp[i+1][0]=true;
        else break;
    }
    for(int i=0;i<len1;++i){
        for(int j=0;j<len2;++j){
            if(str1[i]=='*'){
                dp[i+1][j+1]=(dp[i][j+1] || dp[i][j] || dp[i+1][j]);
            }
            if(str1[i]=='?' || str1[i]==str2[j]){
                dp[i+1][j+1]=dp[i][j];
            }
        }
    }
    if(dp[len1][len2]==true)cout<<"matched";
    else cout<<"not matched";
    return 0;
}
