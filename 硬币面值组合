/************
描述
使用1角、2角、5角硬币组成 n 角钱。 
设1角、2角、5角的硬币各用了a、b、c个，列出所有可能的a, b, c组合。 
输出顺序为，按c的值从小到大，c相同的按b的值从小到大输出。 
要求必须使用递归。
关于输入
输入只有一个整数n（1 <= n <= 100)，代表需要组成的钱的角数。
关于输出
输出有若干行，每行的形式为： 
i           a           b           c 

第1列i代表当前行数（行数从001开始，固定3个字符宽度，宽度不足3的用0填充）， 
后面3列a, b, c分别代表1角、2角、5角硬币的个数（每个数字固定12个字符宽度，宽度不足的在左边填充空格）
例子输入
10
例子输出
001          10           0           0

002           8           1           0

003           6           2           0

004           4           3           0

005           2           4           0

006           0           5           0

007           5           0           1

008           3           1           1

009           1           2           1

010           0           0           2

提示
cout << setfill('0')可以设置填充字符为'0'； 
设完之后记得调用setfill(' ')设回空格，否则会影响后续输出。
************/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
int cnt=1;
int a=0,b=0,c=0;
int num(int n,int k){
    for(int i=0;i*k<=n;++i){
        if(k==5){
            c=i;
            num(n-i*k,2);
        }
        if(k==2){
            b=i;
            num(n-i*k,1);
        }
    }
    if(k==1){
        a=n;
        cout<<setfill('0')<<setw(3)<<cnt<<setfill(' ')<<setw(12)<<a<<setw(12)<<b<<setw(12)<<c<<endl;
        cnt++;
        return 0;
    }
    return 0;
}
int main(){
    int n;
    cin>>n;
    num(n,5);
    return 0;
}
