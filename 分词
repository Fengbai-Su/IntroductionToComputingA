/******
描述
给定一个包含n个单词的英文词典和m个只由英文字母组成的字符串。 
判断这些字符串能否由词典中的单词组成。 
比如词典中包含5个单词："Jim", "and", "cat","like", "dog" 
这些单词能组成"Jimlikecatanddog"、"doglikecatandcatlikedog"等， 
但是不能组成"catlikeme" 

为了简化问题，所有的字母都是小写,而且词典中的所有单词长度都一样。 
关于输入
第一行两个正整数，n和m（n，m都不超过100）； 
接下来n行，每行一个单词，每个单词长度不超过20； 
接下来m行，每行一个字符串，长度不超过1000；
关于输出
m行，表示词库中的单词能否组成该字符串，能输出"Yes"，不能输出"No"。
例子输入
10 5

did

not

and

but

hit

run

cat

dog

pig

cow

cathitdoganddogrun

doghitpigbutpigdidnotrun

pighitcowandcowdidrun

cowhitcatandcatcry

catdogpigandcowarehungry
例子输出
Yes

Yes

Yes

No

No
*****/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
int main(){
    int n,m;
    cin>>n>>m;
    char str1[105][25],str2[105][1005];
    for(int i=0;i<n;++i){
        cin>>str1[i];
    }
    for(int i=0;i<m;++i){
        cin>>str2[i];
    }
    char *p=NULL;
    int len=strlen(str1[0]);
    for(int i=0;i<m;++i){
        for(int j=0;j<n;++j){
            while((p=strstr(str2[i],str1[j]))!=NULL){
                for(char *q=p;q<p+len;++q){
                    *q='#';
                }
            }
        }
        int j=0;
        for(j=0;j<strlen(str2[i]);++j){
            if(str2[i][j]!='#')break;
        }
        if(j<strlen(str2[i]))cout<<"No"<<endl;
        else cout<<"Yes"<<endl;
    }
    return 0;
}
