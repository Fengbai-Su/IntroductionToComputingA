/***********
来源	曲直
描述
输入一个包括+、-、*、/和()的四则运算表达式，你能算出表达式的值吗？ 

这个表达式满足： 
1、没有括号不匹配的情况，但可能有嵌套的情形 
2、操作数均为整数，但需考虑正负数 
3、没有非法表达式，也没有零作除数的情况 
4、所有操作都可以视为整型计算，不考虑分数和小数的情况 
5、中间结果和最终结果不会超出int的表示范围
关于输入
若干行，每行为一个合法的四则运算表达式
关于输出
若干行，为对应的运算结果
例子输入
1+3+5

5*(3+7)

-(-4/(1+3))*5-1*2*3

例子输出
9

50

-1
**********/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
char str[1005];
int match(int l,int r){
    int cnt=1;
    for(int i=r-1;i>=l;--i){
        if(str[i]==')'){
            cnt++;
        }
        if(str[i]=='('){
            cnt--;
        }
        if(!cnt)return i;
    }
    return 0;
}
int cal(int l,int r){
    for(int i=r;i>=l;--i){
        if(str[i]==')')i=match(l,i);
        if(str[i]=='+')return cal(l,i-1) + cal(i+1,r);
        if(str[i]=='-')return cal(l,i-1) - cal(i+1,r);
    }
    for(int i=r;i>=l;--i){
        if(str[i]==')')i=match(l,i);
        if(str[i]=='*')return cal(l,i-1) * cal(i+1,r);
        if(str[i]=='/')return cal(l,i-1) / cal(i+1,r);
    }
    if(str[r]==')')return cal(l+1,r-1);
    if(str[r]>='0' && str[r]<='9'){
        int sum=0;
        int cnt=0;
        for(int i=r;i>=l;--i){
            sum+=pow(10.0,cnt++)*(str[i]-'0');
        }
        return sum;
    }
    return 0;
}
int main(){
    while(cin.getline(str, 1005)){
        int len=strlen(str);
        for(int i=0;i<len;++i){
            if(str[i]==' '){
                for(int j=i;j<len-1;++j){
                    str[j]=str[j+1];
                }
                str[len-1]='\0';
                len--;
                i--;
            }
        }
        cout<<cal(0,len-1)<<endl;
    }
    return 0;
}
