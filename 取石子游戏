/*************
描述
有两堆石子,两个人轮流去取.每次取的时候,只能从较多的那堆石子里取,并且取的数目必须是较少的那堆石子数目的整数倍.最后谁能够把一堆石子取空谁就算赢. 
比如初始的时候两堆石子的数目是25和7 



25 7	-->	11 7	-->	4 7	-->	4 3	-->	1 3	-->	1 0
 	选手1取	 	选手2取	 	选手1取	 	选手2取	 	选手1取

最后选手1（先取的）获胜，在取的过程中选手2都只有唯一的一种取法。 
给定初始时石子的数目，如果两个人都采取最优策略，请问先手能否获胜。
关于输入
输入包含多数数据。每组数据一行，包含两个正整数a和b，表示初始时石子的数目。 
输入以两个0表示结束。 
关于输出
如果先手胜，输出"win"，否则输出"lose"
例子输入
34 12

15 24

0 0
例子输出
win

lose
提示
假设石子数目为(a,b)且a>=b,如果[a/b]>=2则先手必胜,如果[a/b]<2,那么先手只有唯一的一种取法. 
[a/b]表示a除以b取整后的值.
***********/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
int game(int m,int n){
    if(m/n>=2 || n/m>=2)return 1;
    if(m==n)return 1;
    return 0;
}
int main(){
    int a,b;
    while(cin>>a>>b){
        if(a==0 && b==0)break;
        int time=0;
        while(a!=0 && b!=0){
            if(game(a,b)==0){
                if(a>=b){
                    a-=b;
                }else{
                    b-=a;
                }
            }else{
                break;
            }
            time++;
        }
        if(time%2==0)cout<<"win"<<endl;
        else cout<<"lose"<<endl;
    }
    return 0;
}
