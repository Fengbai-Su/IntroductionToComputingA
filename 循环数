/**********
描述
当一个N位的整数X满足下列条件时，称其为循环数：X与任意一个整数1≤Y ≤ N相乘时，都将产生一个X的“循环”。即：分别将这两个整数的第1位数字与最后1位数字连在一起，可以得到一个相同的数字循环；当然两个整数在该数字循环中的起始位置不同。例如，142857是一个循环数 
142857 *1 = 142857 
142857 *2 = 285714 
142857 *3 = 428571 
142857 *4 = 571428 
142857 *5 = 714285 
142857 *6 = 857142
关于输入
写一个程序判断一个整数是否是循环数。输入文件是一个整数序列，每个整数长度为2~60。注意：每个整数前面的零被看作是该整数的一部分，在计算N时要统计。例如“01”是一个2位的整数，而“1”是一个1位的整数。
关于输出
对每个输入整数，输出一行，说明该整数是否是循环数。
例子输入
142857

142856

142858

01

0588235294117647
例子输出
142857 is cyclic

142856 is not cyclic

142858 is not cyclic

01 is not cyclic

0588235294117647 is cyclic
************/
#include <cstring>
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <iomanip>
#define MAX 2147483647
using namespace std;
int judge(char *a,char *b,int len1,int len2){
    if(len1!=len2)return 0;
    int i=0,j=0,k=0,cnt=0;
    for(k=0;k<3*len1;++k){
        if(i==len1)i=0;
        if(a[i]==b[j]){
            j++;
            i++;
            if(j==len1)j=0;
            cnt++;
        }else if(a[i]!=b[j] && cnt!=0){
            cnt=0;
            j=0;
            continue;
        }else{
            j=0;
            i++;
        }
        if(cnt==len1)break;
    }
    if(cnt==len1)return 1;
    return 0;
}
int main(){
    char str[65];
    char tar[100];
    /*cin>>str>>tar;
    int len1=strlen(str);
    int len2=strlen(tar);
    cout<<judge(str,tar,len1,len2);*/
    while(cin>>str){
        memset(tar,'0',sizeof(tar));
        int len=strlen(str);
        int i=0,k=0;
        for(i=1;i<=len;++i){
            for(int j=len-1;j>=0;--j){
                if((tar[k]-'0')+i*(str[j]-'0')>=0 && (tar[k]-'0')+i*(str[j]-'0')<=9){
                    tar[k++]+=i*(str[j]-'0');
                }else{
                    tar[k+1]=(tar[k]-'0'+i*(str[j]-'0'))/10+'0';
                    tar[k]=((tar[k]-'0'+i*(str[j]-'0'))%10)+'0';
                    k++;
                }
            }
            if(tar[k]!='0')k++;
            for(int j=0;j<k/2;++j){
                char tmp=tar[j];
                tar[j]=tar[k-1-j];
                tar[k-1-j]=tmp;
            }
            if(judge(str,tar,len,k)==0)break;
            memset(tar,'0',sizeof(tar));
            k=0;
        }
        if(i<=len){
            cout<<str<<' '<<"is not cyclic"<<endl;
        }else{
            cout<<str<<' '<<"is cyclic"<<endl;
        }
    }
    return 0;
}
