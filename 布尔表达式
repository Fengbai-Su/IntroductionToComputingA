/*************
描述
输入一个布尔表达式，请你输出它的真假值。 
比如：( V | V ) & F & ( F | V ) 
V表示true，F表示false，&表示与，|表示或，!表示非。 
上式的结果是F
关于输入
输入包含多行，每行一个布尔表达式，表达式中可以有空格，总长度不超过1000
关于输出
对每行输入，如果表达式为真，输出"V",否则出来"F"
例子输入
( V | V ) & F & ( F| V)

!V | V & V & !F & (F | V ) & (!F | F | !V & V)

(F&F|V|!V&!F&!(F|F&V))
例子输出
F

V

V
**********/
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <algorithm>
using namespace std;
char str[1005];
int match(int l,int r){
    int cnt=1;
    for(int i=r-1;i>=l;--i){
        if(str[i]==')'){
            cnt++;
        }
        if(str[i]=='('){
            cnt--;
        }
        if(!cnt)return i;
    }
    return 0;
}
int cal(int l,int r){
    for(int i=r;i>=l;--i){
        if(str[i]==')')i=match(l,i);
        if(str[i]=='|')return cal(l,i-1) || cal(i+1,r);
    }
    for(int i=r;i>=l;--i){
        if(str[i]==')')i=match(l,i);
        if(str[i]=='&')return cal(l,i-1) && cal(i+1,r);
    }
    if(str[l]=='!')return !cal(l+1,r);
    if(str[r]==')')return cal(l+1,r-1);
    if(str[r]=='V'){
        return 1;
    }else if(str[r]=='F'){
        return 0;
    }
    return 0;
}
int main(){
    while(cin.getline(str, 1005)){
        int len=strlen(str);
        for(int i=0;i<len;++i){
            if(str[i]==' '){
                for(int j=i;j<len-1;++j){
                    str[j]=str[j+1];
                }
                str[len-1]='\0';
                len--;
                i--;
            }
        }
        if(cal(0,len-1)==1)cout<<'V'<<endl;
        else cout<<'F'<<endl;
    }
    return 0;
}
