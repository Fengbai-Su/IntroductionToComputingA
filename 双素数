/********
来源	医学部计概2019-罗英伟-赵恒昶-中等题
描述
学习了计算概论课之后，我们知道整数在计算机中是以二进制存储的。数学兴趣小组最近在研究质数，他们想知道，素数的二进制表示有什么规律，比如：素数的二进制表示中1的个数是不是素数。我们给二进制表示中1的个数仍然是素数的素数，取名为“双素数”。现在请你写出一个程序，统计不大于n的正整数中有多少个“双素数”。
关于输入
输入多行，每行一个整数，即正整数n。（n<=12345） 
关于输出
输出多行，每行一个整数，即对应的不大于n的正整数中“双素数”的个数
例子输入
3
例子输出
1
***********/
#include <iostream>
#include <cstring>
#include <iomanip>
#include <algorithm>
#include <cmath>
using namespace std;
int arr[20000];
bool Prime[20000] = { false };
int dp[20000] = { 0 };
int isPrime(int n) {
    if (n < 2)return 0;
    if (n == 2)return 1;
    if (n > 2) {
        for (int i = 2; i * i <= n; ++i) {
            if (n % i == 0)return 0;
        }
        return 1;
    }
    return 0;
}
int convert(int n) {
    int l = 0;
    while (n) {
        arr[l++] = n % 2;
        n /= 2;
    }
    return l;
}
int main(){
    for (int i = 2; i < 20000; ++i) {
        if (isPrime(i) == 1)Prime[i] = true;
    }
    dp[3] = 1;
    for (int i = 4; i <= 12345; ++i) {
        if (Prime[i] == false) {
            dp[i] = dp[i - 1];
            continue;
        }
        int j = convert(i);
        int sum = 0;
        for (int k = 0; k < j; ++k) {
            if (arr[k] == 1)sum++;
        }
        if (Prime[sum] == true)dp[i] = dp[i - 1] + 1;
        else dp[i] = dp[i - 1];
    }
    int n;
    while (cin >> n) {
        cout << dp[n] << endl;
    }
    return 0;
}
