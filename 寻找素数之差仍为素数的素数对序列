/***********
描述
寻找素数对，要求这两个素数之差的绝对值还是素数。请在[m,n]范围内（包含m和n；其中，m和n都是正整数，且m小于n）寻找这样的素数对。输出所有满足条件的素数对(k1,K2)；如果不存在，则输出 NULL。 

假定n的最大值不超过 200000 
关于输入
正整数m 和 n，以逗号间隔。
关于输出
输出[m,n]范围内的素数对序列，每一对素数均以(k1,k2)的形式表示，偶对之间以分号间隔。其中，k1小于k2；要求，k1较小的偶对先输出，在k1相等的情况下，k2较小的偶对先输出。如果没有，输出NULL
例子输入
1,15
例子输出
(2,5)

(2,7)

(2,13)

(3,5)

(5,7)

(11,13)
***************/
#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <iomanip>
#define MAX 2147483647
using namespace std;
int isPrime(int n){
    if(n<2)return 0;
    if(n==2)return 1;
    for(int i=2;i<=n/2+1;++i){
        if(n%i==0)return 0;
    }
    return 1;
}
int main(){
    int m,n;
    char c;
    cin>>m>>c>>n;
    int tmp=0;
    int arr[20005];//用于存放素数
    int cnt=0;
    for(int i=m;i<=n;++i){//搜索范围内素数并存入数组
        if(isPrime(i)==1){
            arr[cnt]=i;
            cnt++;
        }
    }
    for(int i=0;i<cnt;++i){
        for(int j=i+1;j<cnt;++j){
            if(isPrime(abs(arr[j]-arr[i]))==1){
                tmp=1;
                cout<<'('<<arr[i]<<','<<arr[j]<<')'<<endl;
            }
        }
    }
    if(tmp==0)cout<<"NULL";
    return 0;
}
